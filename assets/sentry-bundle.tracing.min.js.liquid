/** * Sentry Error Monitoring Configuration for TPS BASE V1 Shopify Theme * Initializes Sentry SDK
with proper error tracking and user context */ (function () { // V√©rifier que Sentry SDK est charg√©
if (!window.Sentry) { console.warn("[Sentry] SDK not loaded - Error monitoring disabled"); return; }

// V√©rifier si Sentry est activ√© dans les param√®tres du th√®me
{% unless settings.sentry_enabled %}
  console.log("‚ÑπÔ∏è Sentry d√©sactiv√© dans les param√®tres du th√®me"); return;
{% endunless %}

{% unless settings.sentry_dsn %}
  console.warn("‚ö†Ô∏è DSN Sentry non configur√© dans les param√®tres du th√®me"); return;
{% endunless %}

// Configuration Sentry const sentryConfig = { // DSN depuis les param√®tres du th√®me dsn: '
{{- settings.sentry_dsn -}}
',

// Int√©grations pour le monitoring integrations: [ new Sentry.BrowserTracing({ // Tracer les
interactions utilisateur tracingOrigins: ["localhost", /^\//], }), ],

// Configuration de l'√©chantillonnage tracesSampleRate:
{{ settings.sentry_traces_sample_rate | default: 0.1 }},

// Environnement environment: "
{{- request.env | default: 'production' -}}
",

// Mode debug bas√© sur les param√®tres debug: {{ settings.sentry_debug | default: false | json }},

// Release bas√©e sur le th√®me release: "tps-base-v1@{{ theme.id }}",

// Filtres d'erreurs personnalis√©s beforeSend(event, hint) { const error = hint.originalException;

// Ignorer les erreurs de test if (error && typeof error.message === 'string') { const
ignoredMessages = [ "Test de v√©rification manuelle Sentry", "Script error", "Non-Error promise
rejection captured" ];

for (const message of ignoredMessages) { if (error.message.includes(message)) { console.warn(`‚õî
Erreur Sentry ignor√©e: ${message}`); return null; } } }

// Ajouter du contexte Shopify event.tags = event.tags || {}; event.tags.theme = 'tps-base-v1';
event.tags.shop = '{{ shop.permanent_domain }}';

return event; },

// Configuration des breadcrumbs beforeBreadcrumb(breadcrumb, hint) { // Filtrer les breadcrumbs non
pertinents if (breadcrumb.category === 'console' && breadcrumb.level === 'log') { return null; }
return breadcrumb; } };

// Initialiser Sentry Sentry.init(sentryConfig);

// Configuration du contexte utilisateur
{% if customer %}
  Sentry.setUser({ id: "{{ customer.id }}", email: "{{ customer.email }}", username: "
  {{- customer.first_name | append: ' ' | append: customer.last_name -}}
  ", segment: "customer" });
{% else %}
  Sentry.setUser({ id: "anonymous", segment: "visitor" });
{% endif %}

// Contexte Shopify Sentry.setContext("shopify", { shop: "{{ shop.permanent_domain }}", theme_id: "
{{- theme.id -}}
", theme_name: "TPS BASE V1", currency: "{{ cart.currency.iso_code }}", locale: "
{{- request.locale.iso_code -}}
" });

// Contexte de la page Sentry.setContext("page", { template: "{{ template }}", handle: "
{{- page.handle | default: product.handle | default: collection.handle -}}
", url: window.location.pathname });

console.log("‚úÖ Sentry initialized successfully for TPS BASE V1");

// Fonction de test pour v√©rifier la configuration window.testSentry = function() { console.log("üß™
Test Sentry - Envoi d'un message de test..."); Sentry.addBreadcrumb({ message: 'Test breadcrumb from
TPS BASE V1', category: 'test', level: 'info' });

Sentry.captureMessage('Test message from TPS BASE V1 theme', 'info'); console.log("‚úÖ Message de
test envoy√© √† Sentry"); };

})();
